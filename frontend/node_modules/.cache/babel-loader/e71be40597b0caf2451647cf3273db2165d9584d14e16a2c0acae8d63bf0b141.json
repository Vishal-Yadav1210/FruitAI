{"ast":null,"code":"var _jsxFileName = \"D:\\\\New folder (18)\\\\frontend\\\\src\\\\components\\\\Chatbot.js\",\n  _s = $RefreshSig$();\n// components/Chatbot.js\nimport React, { useState } from 'react';\nimport './Chatbot.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fruitData = [{\n  id: 1,\n  name: 'Orange',\n  calories: '47 kcal'\n}, {\n  id: 2,\n  name: 'Cucumber',\n  calories: '16 kcal'\n}, {\n  id: 3,\n  name: 'Tangerine',\n  calories: '53 kcal'\n}];\nconst Chatbot = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const sendMessage = message => {\n    setMessages([...messages, {\n      text: message\n    }]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat-message\",\n        children: message.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-input-container\",\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"chat-input\",\n        placeholder: \"Type a message\",\n        onKeyPress: e => {\n          if (e.key === 'Enter') sendMessage(e.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fruit-list\",\n      children: fruitData.map(fruit => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fruit-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: fruit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: fruit.calories\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, fruit.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Chatbot, \"dxxfFX7fiXmC0h9Fk+B7I5VonqM=\");\n_c = Chatbot;\nexport default Chatbot;\nvar _c;\n$RefreshReg$(_c, \"Chatbot\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","fruitData","id","name","calories","Chatbot","_s","messages","setMessages","sendMessage","message","text","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","placeholder","onKeyPress","e","key","target","value","fruit","_c","$RefreshReg$"],"sources":["D:/New folder (18)/frontend/src/components/Chatbot.js"],"sourcesContent":["// components/Chatbot.js\r\nimport React, { useState } from 'react';\r\nimport './Chatbot.css';\r\n\r\nconst fruitData = [\r\n  { id: 1, name: 'Orange', calories: '47 kcal' },\r\n  { id: 2, name: 'Cucumber', calories: '16 kcal' },\r\n  { id: 3, name: 'Tangerine', calories: '53 kcal' }\r\n];\r\n\r\nconst Chatbot = () => {\r\n  const [messages, setMessages] = useState([]);\r\n\r\n  const sendMessage = (message) => {\r\n    setMessages([...messages, { text: message }]);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chat-container\">\r\n      <h1>Chatbot</h1>\r\n      <div className=\"chat-box\">\r\n        {messages.map((message, index) => (\r\n          <div key={index} className=\"chat-message\">{message.text}</div>\r\n        ))}\r\n      </div>\r\n      <div className=\"chat-input-container\">\r\n        <input\r\n          className=\"chat-input\"\r\n          placeholder=\"Type a message\"\r\n          onKeyPress={(e) => {\r\n            if (e.key === 'Enter') sendMessage(e.target.value);\r\n          }}\r\n        />\r\n      </div>\r\n      <div className=\"fruit-list\">\r\n        {fruitData.map((fruit) => (\r\n          <div key={fruit.id} className=\"fruit-card\">\r\n            <h3>{fruit.name}</h3>\r\n            <p>{fruit.calories}</p>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Chatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}